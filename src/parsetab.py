
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOP_ORleftOP_ANDrightOP_NOTnonassocOP_MENOROP_MENOR_IGUALOP_MAYOROP_MAYOR_IGUALOP_IGUALOP_DIFERENTEleftOP_SUMAOP_RESTAleftOP_MULTOP_DIVOP_MODrightOP_POTOP_MCTMZrightUMINUSBOOL BREAK COMA CONTINUE COS COSH COT CSC DOS_PUNTOS EFECTOS ELIF ELSE E_ID_START_DIGIT E_NUM_START_ZERO E_SIMB_NOT_FOUND FALSE FLOAT FN FOR IDENTIFICADOR IF IN INT LIT_FLOAT LIT_INT LIT_STRING L_CORCHETE L_LLAVE L_PARENTESIS MAX MEAN MEDIAN MIN MODE MODELODOSVIAS NULL OP_AND OP_ASIGN OP_DIFERENTE OP_DIV OP_IGUAL OP_MAYOR OP_MAYOR_IGUAL OP_MCTMZ OP_MENOR OP_MENOR_IGUAL OP_MOD OP_MULT OP_NOT OP_OR OP_POT OP_RESTA OP_SUMA PRINT PUNTO PUNTO_COMA RACHA RANGE RETURN R_CORCHETE R_LLAVE R_PARENTESIS SEC SIN SINH STRING TAN TANH TRUE WHILEprogram : statement_liststatement_list : statement_list statement\n                     | statementstatement : expression_statement\n                | compound_statement\n                | selection_statement\n                | iteration_statement\n                | jump_statement\n                | declaration_statement\n                | print_statementexpression_statement : expression PUNTO_COMA\n                           | PUNTO_COMAcompound_statement : L_LLAVE statement_list R_LLAVE\n                          | L_LLAVE R_LLAVEselection_statement : IF L_PARENTESIS expression R_PARENTESIS statement\n                          | IF L_PARENTESIS expression R_PARENTESIS statement ELSE statementiteration_statement : WHILE L_PARENTESIS expression R_PARENTESIS statement\n                          | FOR L_PARENTESIS expression PUNTO_COMA expression PUNTO_COMA expression R_PARENTESIS statementjump_statement : RETURN expression PUNTO_COMA\n                     | BREAK PUNTO_COMA\n                     | CONTINUE PUNTO_COMAdeclaration_statement : type_specifier IDENTIFICADOR OP_ASIGN expression PUNTO_COMA\n                            | type_specifier IDENTIFICADOR PUNTO_COMAprint_statement : PRINT L_PARENTESIS expression R_PARENTESIS PUNTO_COMAtype_specifier : INT\n                     | FLOAT\n                     | BOOL\n                     | STRINGexpression : assignment_expression\n                 | math_expression\n                 | logical_expression\n                 | relational_expression\n                 | primary_expressionassignment_expression : IDENTIFICADOR OP_ASIGN expressionmath_expression : expression OP_SUMA expression\n                      | expression OP_RESTA expression\n                      | expression OP_MULT expression\n                      | expression OP_DIV expression\n                      | expression OP_MOD expression\n                      | expression OP_POT expression\n                      | OP_RESTA expression %prec UMINUS\n                      | expression OP_MCTMZ expressionlogical_expression : expression OP_AND expression\n                         | expression OP_OR expression\n                         | OP_NOT expressionrelational_expression : expression OP_MENOR expression\n                            | expression OP_MENOR_IGUAL expression\n                            | expression OP_MAYOR expression\n                            | expression OP_MAYOR_IGUAL expression\n                            | expression OP_IGUAL expression\n                            | expression OP_DIFERENTE expressionprimary_expression : IDENTIFICADOR\n                          | literal\n                          | L_PARENTESIS expression R_PARENTESIS\n                          | function_callfunction_call : IDENTIFICADOR L_PARENTESIS argument_list R_PARENTESIS\n                    | IDENTIFICADOR L_PARENTESIS R_PARENTESISargument_list : argument_list COMA expression\n                    | expressionliteral : LIT_INT\n               | LIT_FLOAT\n               | LIT_STRING\n               | TRUE\n               | FALSE'
    
_lr_action_items = {'PUNTO_COMA':([0,2,3,4,5,6,7,8,9,10,11,12,13,19,20,22,24,25,26,27,28,35,36,37,38,39,40,41,42,43,59,60,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,94,96,97,99,102,103,105,106,108,109,110,111,112,114,115,117,119,120,],[12,12,-3,-4,-5,-6,-7,-8,-9,-10,43,-12,12,66,67,-52,-29,-30,-31,-32,-33,-53,-55,-60,-61,-62,-63,-64,-2,-11,12,-14,94,-20,-21,96,-41,-45,-35,-36,-37,-38,-39,-40,-42,-43,-44,-46,-47,-48,-49,-50,-51,-13,-54,104,-19,-23,-34,-57,12,12,112,-56,114,-15,-17,116,-22,-24,12,-16,12,-18,]),'L_LLAVE':([0,2,3,4,5,6,7,8,9,10,12,13,42,43,59,60,66,67,89,94,96,102,103,109,110,112,114,115,117,119,120,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-12,13,-2,-11,13,-14,-20,-21,-13,-19,-23,13,13,-15,-17,-22,-24,13,-16,13,-18,]),'IF':([0,2,3,4,5,6,7,8,9,10,12,13,42,43,59,60,66,67,89,94,96,102,103,109,110,112,114,115,117,119,120,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-12,14,-2,-11,14,-14,-20,-21,-13,-19,-23,14,14,-15,-17,-22,-24,14,-16,14,-18,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,12,13,42,43,59,60,66,67,89,94,96,102,103,109,110,112,114,115,117,119,120,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-12,16,-2,-11,16,-14,-20,-21,-13,-19,-23,16,16,-15,-17,-22,-24,16,-16,16,-18,]),'FOR':([0,2,3,4,5,6,7,8,9,10,12,13,42,43,59,60,66,67,89,94,96,102,103,109,110,112,114,115,117,119,120,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-12,17,-2,-11,17,-14,-20,-21,-13,-19,-23,17,17,-15,-17,-22,-24,17,-16,17,-18,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,12,13,42,43,59,60,66,67,89,94,96,102,103,109,110,112,114,115,117,119,120,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-12,18,-2,-11,18,-14,-20,-21,-13,-19,-23,18,18,-15,-17,-22,-24,18,-16,18,-18,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,12,13,42,43,59,60,66,67,89,94,96,102,103,109,110,112,114,115,117,119,120,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-12,19,-2,-11,19,-14,-20,-21,-13,-19,-23,19,19,-15,-17,-22,-24,19,-16,19,-18,]),'CONTINUE':([0,2,3,4,5,6,7,8,9,10,12,13,42,43,59,60,66,67,89,94,96,102,103,109,110,112,114,115,117,119,120,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-12,20,-2,-11,20,-14,-20,-21,-13,-19,-23,20,20,-15,-17,-22,-24,20,-16,20,-18,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,12,13,42,43,59,60,66,67,89,94,96,102,103,109,110,112,114,115,117,119,120,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-12,23,-2,-11,23,-14,-20,-21,-13,-19,-23,23,23,-15,-17,-22,-24,23,-16,23,-18,]),'INT':([0,2,3,4,5,6,7,8,9,10,12,13,42,43,59,60,66,67,89,94,96,102,103,109,110,112,114,115,117,119,120,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-12,29,-2,-11,29,-14,-20,-21,-13,-19,-23,29,29,-15,-17,-22,-24,29,-16,29,-18,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,12,13,42,43,59,60,66,67,89,94,96,102,103,109,110,112,114,115,117,119,120,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-12,30,-2,-11,30,-14,-20,-21,-13,-19,-23,30,30,-15,-17,-22,-24,30,-16,30,-18,]),'BOOL':([0,2,3,4,5,6,7,8,9,10,12,13,42,43,59,60,66,67,89,94,96,102,103,109,110,112,114,115,117,119,120,],[31,31,-3,-4,-5,-6,-7,-8,-9,-10,-12,31,-2,-11,31,-14,-20,-21,-13,-19,-23,31,31,-15,-17,-22,-24,31,-16,31,-18,]),'STRING':([0,2,3,4,5,6,7,8,9,10,12,13,42,43,59,60,66,67,89,94,96,102,103,109,110,112,114,115,117,119,120,],[32,32,-3,-4,-5,-6,-7,-8,-9,-10,-12,32,-2,-11,32,-14,-20,-21,-13,-19,-23,32,32,-15,-17,-22,-24,32,-16,32,-18,]),'IDENTIFICADOR':([0,2,3,4,5,6,7,8,9,10,12,13,15,18,21,29,30,31,32,33,34,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,66,67,69,70,71,89,94,95,96,102,103,104,107,109,110,112,114,115,116,117,119,120,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-12,22,22,22,68,-25,-26,-27,-28,22,22,-2,-11,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-14,22,22,22,-20,-21,22,22,22,-13,-19,22,-23,22,22,22,22,-15,-17,-22,-24,22,22,-16,22,-18,]),'OP_RESTA':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,18,22,24,25,26,27,28,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,],[33,33,-3,-4,-5,-6,-7,-8,-9,-10,45,-12,33,33,33,-52,-29,-30,-31,-32,-33,33,33,-53,-55,-60,-61,-62,-63,-64,-2,-11,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-14,33,45,33,33,45,-20,-21,33,33,33,-41,45,-35,-36,-37,-38,-39,-40,-42,45,45,45,45,45,45,45,45,-13,45,-54,45,45,-19,33,-23,45,-57,45,45,33,33,33,45,-56,33,-15,-17,45,-22,45,-24,33,33,-16,45,33,-18,]),'OP_NOT':([0,2,3,4,5,6,7,8,9,10,12,13,15,18,33,34,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,66,67,69,70,71,89,94,95,96,102,103,104,107,109,110,112,114,115,116,117,119,120,],[34,34,-3,-4,-5,-6,-7,-8,-9,-10,-12,34,34,34,34,34,-2,-11,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-14,34,34,34,-20,-21,34,34,34,-13,-19,34,-23,34,34,34,34,-15,-17,-22,-24,34,34,-16,34,-18,]),'L_PARENTESIS':([0,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,22,23,33,34,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,66,67,69,70,71,89,94,95,96,102,103,104,107,109,110,112,114,115,116,117,119,120,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-12,15,61,15,63,64,15,70,71,15,15,-2,-11,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-14,15,15,15,-20,-21,15,15,15,-13,-19,15,-23,15,15,15,15,-15,-17,-22,-24,15,15,-16,15,-18,]),'LIT_INT':([0,2,3,4,5,6,7,8,9,10,12,13,15,18,33,34,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,66,67,69,70,71,89,94,95,96,102,103,104,107,109,110,112,114,115,116,117,119,120,],[37,37,-3,-4,-5,-6,-7,-8,-9,-10,-12,37,37,37,37,37,-2,-11,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-14,37,37,37,-20,-21,37,37,37,-13,-19,37,-23,37,37,37,37,-15,-17,-22,-24,37,37,-16,37,-18,]),'LIT_FLOAT':([0,2,3,4,5,6,7,8,9,10,12,13,15,18,33,34,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,66,67,69,70,71,89,94,95,96,102,103,104,107,109,110,112,114,115,116,117,119,120,],[38,38,-3,-4,-5,-6,-7,-8,-9,-10,-12,38,38,38,38,38,-2,-11,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-14,38,38,38,-20,-21,38,38,38,-13,-19,38,-23,38,38,38,38,-15,-17,-22,-24,38,38,-16,38,-18,]),'LIT_STRING':([0,2,3,4,5,6,7,8,9,10,12,13,15,18,33,34,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,66,67,69,70,71,89,94,95,96,102,103,104,107,109,110,112,114,115,116,117,119,120,],[39,39,-3,-4,-5,-6,-7,-8,-9,-10,-12,39,39,39,39,39,-2,-11,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-14,39,39,39,-20,-21,39,39,39,-13,-19,39,-23,39,39,39,39,-15,-17,-22,-24,39,39,-16,39,-18,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,12,13,15,18,33,34,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,66,67,69,70,71,89,94,95,96,102,103,104,107,109,110,112,114,115,116,117,119,120,],[40,40,-3,-4,-5,-6,-7,-8,-9,-10,-12,40,40,40,40,40,-2,-11,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-14,40,40,40,-20,-21,40,40,40,-13,-19,40,-23,40,40,40,40,-15,-17,-22,-24,40,40,-16,40,-18,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,12,13,15,18,33,34,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,66,67,69,70,71,89,94,95,96,102,103,104,107,109,110,112,114,115,116,117,119,120,],[41,41,-3,-4,-5,-6,-7,-8,-9,-10,-12,41,41,41,41,41,-2,-11,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-14,41,41,41,-20,-21,41,41,41,-13,-19,41,-23,41,41,41,41,-15,-17,-22,-24,41,41,-16,41,-18,]),'$end':([1,2,3,4,5,6,7,8,9,10,12,42,43,60,66,67,89,94,96,109,110,112,114,117,120,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-12,-2,-11,-14,-20,-21,-13,-19,-23,-15,-17,-22,-24,-16,-18,]),'R_LLAVE':([3,4,5,6,7,8,9,10,12,13,42,43,59,60,66,67,89,94,96,109,110,112,114,117,120,],[-3,-4,-5,-6,-7,-8,-9,-10,-12,60,-2,-11,89,-14,-20,-21,-13,-19,-23,-15,-17,-22,-24,-16,-18,]),'ELSE':([4,5,6,7,8,9,10,12,43,60,66,67,89,94,96,109,110,112,114,117,120,],[-4,-5,-6,-7,-8,-9,-10,-12,-11,-14,-20,-21,-13,-19,-23,115,-17,-22,-24,-16,-18,]),'OP_SUMA':([11,22,24,25,26,27,28,35,36,37,38,39,40,41,62,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,97,99,100,101,105,106,111,113,118,],[44,-52,-29,-30,-31,-32,-33,-53,-55,-60,-61,-62,-63,-64,44,44,-41,44,-35,-36,-37,-38,-39,-40,-42,44,44,44,44,44,44,44,44,44,-54,44,44,44,-57,44,44,44,-56,44,44,44,]),'OP_MULT':([11,22,24,25,26,27,28,35,36,37,38,39,40,41,62,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,97,99,100,101,105,106,111,113,118,],[46,-52,-29,-30,-31,-32,-33,-53,-55,-60,-61,-62,-63,-64,46,46,-41,46,46,46,-37,-38,-39,-40,-42,46,46,46,46,46,46,46,46,46,-54,46,46,46,-57,46,46,46,-56,46,46,46,]),'OP_DIV':([11,22,24,25,26,27,28,35,36,37,38,39,40,41,62,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,97,99,100,101,105,106,111,113,118,],[47,-52,-29,-30,-31,-32,-33,-53,-55,-60,-61,-62,-63,-64,47,47,-41,47,47,47,-37,-38,-39,-40,-42,47,47,47,47,47,47,47,47,47,-54,47,47,47,-57,47,47,47,-56,47,47,47,]),'OP_MOD':([11,22,24,25,26,27,28,35,36,37,38,39,40,41,62,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,97,99,100,101,105,106,111,113,118,],[48,-52,-29,-30,-31,-32,-33,-53,-55,-60,-61,-62,-63,-64,48,48,-41,48,48,48,-37,-38,-39,-40,-42,48,48,48,48,48,48,48,48,48,-54,48,48,48,-57,48,48,48,-56,48,48,48,]),'OP_POT':([11,22,24,25,26,27,28,35,36,37,38,39,40,41,62,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,97,99,100,101,105,106,111,113,118,],[49,-52,-29,-30,-31,-32,-33,-53,-55,-60,-61,-62,-63,-64,49,49,-41,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-54,49,49,49,-57,49,49,49,-56,49,49,49,]),'OP_MCTMZ':([11,22,24,25,26,27,28,35,36,37,38,39,40,41,62,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,97,99,100,101,105,106,111,113,118,],[50,-52,-29,-30,-31,-32,-33,-53,-55,-60,-61,-62,-63,-64,50,50,-41,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-54,50,50,50,-57,50,50,50,-56,50,50,50,]),'OP_AND':([11,22,24,25,26,27,28,35,36,37,38,39,40,41,62,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,97,99,100,101,105,106,111,113,118,],[51,-52,-29,-30,-31,-32,-33,-53,-55,-60,-61,-62,-63,-64,51,51,-41,-45,-35,-36,-37,-38,-39,-40,-42,-43,51,-46,-47,-48,-49,-50,-51,51,-54,51,51,51,-57,51,51,51,-56,51,51,51,]),'OP_OR':([11,22,24,25,26,27,28,35,36,37,38,39,40,41,62,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,97,99,100,101,105,106,111,113,118,],[52,-52,-29,-30,-31,-32,-33,-53,-55,-60,-61,-62,-63,-64,52,52,-41,-45,-35,-36,-37,-38,-39,-40,-42,-43,-44,-46,-47,-48,-49,-50,-51,52,-54,52,52,52,-57,52,52,52,-56,52,52,52,]),'OP_MENOR':([11,22,24,25,26,27,28,35,36,37,38,39,40,41,62,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,97,99,100,101,105,106,111,113,118,],[53,-52,-29,-30,-31,-32,-33,-53,-55,-60,-61,-62,-63,-64,53,53,-41,53,-35,-36,-37,-38,-39,-40,-42,53,53,None,None,None,None,None,None,53,-54,53,53,53,-57,53,53,53,-56,53,53,53,]),'OP_MENOR_IGUAL':([11,22,24,25,26,27,28,35,36,37,38,39,40,41,62,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,97,99,100,101,105,106,111,113,118,],[54,-52,-29,-30,-31,-32,-33,-53,-55,-60,-61,-62,-63,-64,54,54,-41,54,-35,-36,-37,-38,-39,-40,-42,54,54,None,None,None,None,None,None,54,-54,54,54,54,-57,54,54,54,-56,54,54,54,]),'OP_MAYOR':([11,22,24,25,26,27,28,35,36,37,38,39,40,41,62,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,97,99,100,101,105,106,111,113,118,],[55,-52,-29,-30,-31,-32,-33,-53,-55,-60,-61,-62,-63,-64,55,55,-41,55,-35,-36,-37,-38,-39,-40,-42,55,55,None,None,None,None,None,None,55,-54,55,55,55,-57,55,55,55,-56,55,55,55,]),'OP_MAYOR_IGUAL':([11,22,24,25,26,27,28,35,36,37,38,39,40,41,62,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,97,99,100,101,105,106,111,113,118,],[56,-52,-29,-30,-31,-32,-33,-53,-55,-60,-61,-62,-63,-64,56,56,-41,56,-35,-36,-37,-38,-39,-40,-42,56,56,None,None,None,None,None,None,56,-54,56,56,56,-57,56,56,56,-56,56,56,56,]),'OP_IGUAL':([11,22,24,25,26,27,28,35,36,37,38,39,40,41,62,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,97,99,100,101,105,106,111,113,118,],[57,-52,-29,-30,-31,-32,-33,-53,-55,-60,-61,-62,-63,-64,57,57,-41,57,-35,-36,-37,-38,-39,-40,-42,57,57,None,None,None,None,None,None,57,-54,57,57,57,-57,57,57,57,-56,57,57,57,]),'OP_DIFERENTE':([11,22,24,25,26,27,28,35,36,37,38,39,40,41,62,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,97,99,100,101,105,106,111,113,118,],[58,-52,-29,-30,-31,-32,-33,-53,-55,-60,-61,-62,-63,-64,58,58,-41,58,-35,-36,-37,-38,-39,-40,-42,58,58,None,None,None,None,None,None,58,-54,58,58,58,-57,58,58,58,-56,58,58,58,]),'OP_ASIGN':([22,68,],[69,95,]),'R_PARENTESIS':([22,24,25,26,27,28,35,36,37,38,39,40,41,62,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,97,98,99,100,101,106,113,118,],[-52,-29,-30,-31,-32,-33,-53,-55,-60,-61,-62,-63,-64,91,99,-41,-45,-35,-36,-37,-38,-39,-40,-42,-43,-44,-46,-47,-48,-49,-50,-51,102,-54,103,-34,106,-57,-59,108,-56,-58,119,]),'COMA':([22,24,25,26,27,28,35,36,37,38,39,40,41,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,97,98,99,100,106,113,],[-52,-29,-30,-31,-32,-33,-53,-55,-60,-61,-62,-63,-64,-41,-45,-35,-36,-37,-38,-39,-40,-42,-43,-44,-46,-47,-48,-49,-50,-51,-54,-34,107,-57,-59,-56,-58,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,13,],[2,59,]),'statement':([0,2,13,59,102,103,115,119,],[3,42,3,42,109,110,117,120,]),'expression_statement':([0,2,13,59,102,103,115,119,],[4,4,4,4,4,4,4,4,]),'compound_statement':([0,2,13,59,102,103,115,119,],[5,5,5,5,5,5,5,5,]),'selection_statement':([0,2,13,59,102,103,115,119,],[6,6,6,6,6,6,6,6,]),'iteration_statement':([0,2,13,59,102,103,115,119,],[7,7,7,7,7,7,7,7,]),'jump_statement':([0,2,13,59,102,103,115,119,],[8,8,8,8,8,8,8,8,]),'declaration_statement':([0,2,13,59,102,103,115,119,],[9,9,9,9,9,9,9,9,]),'print_statement':([0,2,13,59,102,103,115,119,],[10,10,10,10,10,10,10,10,]),'expression':([0,2,13,15,18,33,34,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,69,70,71,95,102,103,104,107,115,116,119,],[11,11,11,62,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,11,90,92,93,97,100,101,105,11,11,111,113,11,118,11,]),'type_specifier':([0,2,13,59,102,103,115,119,],[21,21,21,21,21,21,21,21,]),'assignment_expression':([0,2,13,15,18,33,34,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,69,70,71,95,102,103,104,107,115,116,119,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'math_expression':([0,2,13,15,18,33,34,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,69,70,71,95,102,103,104,107,115,116,119,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'logical_expression':([0,2,13,15,18,33,34,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,69,70,71,95,102,103,104,107,115,116,119,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'relational_expression':([0,2,13,15,18,33,34,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,69,70,71,95,102,103,104,107,115,116,119,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'primary_expression':([0,2,13,15,18,33,34,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,69,70,71,95,102,103,104,107,115,116,119,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'literal':([0,2,13,15,18,33,34,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,69,70,71,95,102,103,104,107,115,116,119,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'function_call':([0,2,13,15,18,33,34,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,69,70,71,95,102,103,104,107,115,116,119,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'argument_list':([70,],[98,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',22),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',26),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',27),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',34),
  ('statement -> compound_statement','statement',1,'p_statement','parser.py',35),
  ('statement -> selection_statement','statement',1,'p_statement','parser.py',36),
  ('statement -> iteration_statement','statement',1,'p_statement','parser.py',37),
  ('statement -> jump_statement','statement',1,'p_statement','parser.py',38),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',39),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',40),
  ('expression_statement -> expression PUNTO_COMA','expression_statement',2,'p_expression_statement','parser.py',44),
  ('expression_statement -> PUNTO_COMA','expression_statement',1,'p_expression_statement','parser.py',45),
  ('compound_statement -> L_LLAVE statement_list R_LLAVE','compound_statement',3,'p_compound_statement','parser.py',52),
  ('compound_statement -> L_LLAVE R_LLAVE','compound_statement',2,'p_compound_statement','parser.py',53),
  ('selection_statement -> IF L_PARENTESIS expression R_PARENTESIS statement','selection_statement',5,'p_selection_statement','parser.py',60),
  ('selection_statement -> IF L_PARENTESIS expression R_PARENTESIS statement ELSE statement','selection_statement',7,'p_selection_statement','parser.py',61),
  ('iteration_statement -> WHILE L_PARENTESIS expression R_PARENTESIS statement','iteration_statement',5,'p_iteration_statement','parser.py',68),
  ('iteration_statement -> FOR L_PARENTESIS expression PUNTO_COMA expression PUNTO_COMA expression R_PARENTESIS statement','iteration_statement',9,'p_iteration_statement','parser.py',69),
  ('jump_statement -> RETURN expression PUNTO_COMA','jump_statement',3,'p_jump_statement','parser.py',76),
  ('jump_statement -> BREAK PUNTO_COMA','jump_statement',2,'p_jump_statement','parser.py',77),
  ('jump_statement -> CONTINUE PUNTO_COMA','jump_statement',2,'p_jump_statement','parser.py',78),
  ('declaration_statement -> type_specifier IDENTIFICADOR OP_ASIGN expression PUNTO_COMA','declaration_statement',5,'p_declaration_statement','parser.py',85),
  ('declaration_statement -> type_specifier IDENTIFICADOR PUNTO_COMA','declaration_statement',3,'p_declaration_statement','parser.py',86),
  ('print_statement -> PRINT L_PARENTESIS expression R_PARENTESIS PUNTO_COMA','print_statement',5,'p_print_statement','parser.py',93),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','parser.py',97),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','parser.py',98),
  ('type_specifier -> BOOL','type_specifier',1,'p_type_specifier','parser.py',99),
  ('type_specifier -> STRING','type_specifier',1,'p_type_specifier','parser.py',100),
  ('expression -> assignment_expression','expression',1,'p_expression','parser.py',104),
  ('expression -> math_expression','expression',1,'p_expression','parser.py',105),
  ('expression -> logical_expression','expression',1,'p_expression','parser.py',106),
  ('expression -> relational_expression','expression',1,'p_expression','parser.py',107),
  ('expression -> primary_expression','expression',1,'p_expression','parser.py',108),
  ('assignment_expression -> IDENTIFICADOR OP_ASIGN expression','assignment_expression',3,'p_assignment_expression','parser.py',112),
  ('math_expression -> expression OP_SUMA expression','math_expression',3,'p_math_expression','parser.py',116),
  ('math_expression -> expression OP_RESTA expression','math_expression',3,'p_math_expression','parser.py',117),
  ('math_expression -> expression OP_MULT expression','math_expression',3,'p_math_expression','parser.py',118),
  ('math_expression -> expression OP_DIV expression','math_expression',3,'p_math_expression','parser.py',119),
  ('math_expression -> expression OP_MOD expression','math_expression',3,'p_math_expression','parser.py',120),
  ('math_expression -> expression OP_POT expression','math_expression',3,'p_math_expression','parser.py',121),
  ('math_expression -> OP_RESTA expression','math_expression',2,'p_math_expression','parser.py',122),
  ('math_expression -> expression OP_MCTMZ expression','math_expression',3,'p_math_expression','parser.py',123),
  ('logical_expression -> expression OP_AND expression','logical_expression',3,'p_logical_expression','parser.py',130),
  ('logical_expression -> expression OP_OR expression','logical_expression',3,'p_logical_expression','parser.py',131),
  ('logical_expression -> OP_NOT expression','logical_expression',2,'p_logical_expression','parser.py',132),
  ('relational_expression -> expression OP_MENOR expression','relational_expression',3,'p_relational_expression','parser.py',139),
  ('relational_expression -> expression OP_MENOR_IGUAL expression','relational_expression',3,'p_relational_expression','parser.py',140),
  ('relational_expression -> expression OP_MAYOR expression','relational_expression',3,'p_relational_expression','parser.py',141),
  ('relational_expression -> expression OP_MAYOR_IGUAL expression','relational_expression',3,'p_relational_expression','parser.py',142),
  ('relational_expression -> expression OP_IGUAL expression','relational_expression',3,'p_relational_expression','parser.py',143),
  ('relational_expression -> expression OP_DIFERENTE expression','relational_expression',3,'p_relational_expression','parser.py',144),
  ('primary_expression -> IDENTIFICADOR','primary_expression',1,'p_primary_expression','parser.py',148),
  ('primary_expression -> literal','primary_expression',1,'p_primary_expression','parser.py',149),
  ('primary_expression -> L_PARENTESIS expression R_PARENTESIS','primary_expression',3,'p_primary_expression','parser.py',150),
  ('primary_expression -> function_call','primary_expression',1,'p_primary_expression','parser.py',151),
  ('function_call -> IDENTIFICADOR L_PARENTESIS argument_list R_PARENTESIS','function_call',4,'p_function_call','parser.py',158),
  ('function_call -> IDENTIFICADOR L_PARENTESIS R_PARENTESIS','function_call',3,'p_function_call','parser.py',159),
  ('argument_list -> argument_list COMA expression','argument_list',3,'p_argument_list','parser.py',166),
  ('argument_list -> expression','argument_list',1,'p_argument_list','parser.py',167),
  ('literal -> LIT_INT','literal',1,'p_literal','parser.py',174),
  ('literal -> LIT_FLOAT','literal',1,'p_literal','parser.py',175),
  ('literal -> LIT_STRING','literal',1,'p_literal','parser.py',176),
  ('literal -> TRUE','literal',1,'p_literal','parser.py',177),
  ('literal -> FALSE','literal',1,'p_literal','parser.py',178),
]
